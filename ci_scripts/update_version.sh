#!/bin/bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Get the release string from ${PROJECT_DIR}/VERSION
release_version="$(cat "${script_dir}/../VERSION")"

echo "Updating version to '${release_version}'"


# Generate VisionrangerAPIConfiguration+Version.swift
cat > "${script_dir}/../Visionranger/VisionrangerAPIConfiguration+Version.swift"  <<EOF
//
// VisionrangerAPIConfiguration+Version.swift
//
// This file was generated by update_version.sh
// Do not edit this file directly.
// Instead, edit the \`VERSION\` file and run \`ci_scripts/update_version.sh\`
//
import Foundation

public extension VisionrangerAPIConfiguration {
    /// The current version of this library.
    static let VSNSDKVersion = "${release_version}"
    
    /*
     NOTE: \`VSNSDKVersion\` must be a hard-coded static string instead of
     dynamically generated from the bundle's \`CFBundleShortVersionString\` to
     ensure the correct value is returned when the SDK is statically linked.
    */
}
EOF

echo "Successfully updated 'StripeAPIConfiguration+Version.swift'"


# Replace the version in Visionranger.podspec
for podspec in ${script_dir}/../*.podspec
do
  cat $podspec | sed -E "s|(s\.version *= *)'(.*)'|\1'$release_version'|" > $podspec.copy
  mv $podspec.copy $podspec

  echo "Successfully updated '$(basename $podspec)'"
done


# Update marketing version of project bundle
bundle exec fastlane run increment_version_number version_number ${release_version}
  
echo "Successfully updated bundle version"
